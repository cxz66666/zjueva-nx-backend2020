// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using _2020_backend.Data;

namespace _2020_backend.Migrations
{
    [DbContext(typeof(BackendContext))]
    [Migration("20200816132707_StringIDSTU")]
    partial class StringIDSTU
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("_2020_backend.Models.InterviewTime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BeginTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Chief")
                        .HasColumnType("text");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NowNum")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("Students")
                        .HasColumnType("integer[]");

                    b.Property<int>("TakenNum")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Time");
                });

            modelBuilder.Entity("_2020_backend.Models.Notes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OperatorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OperatorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("_2020_backend.Models.Record", b =>
                {
                    b.Property<int>("rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("FinalResult")
                        .HasColumnType("integer");

                    b.Property<int>("InterviewID")
                        .HasColumnType("integer");

                    b.Property<string>("InterviewTime")
                        .HasColumnType("text");

                    b.Property<List<int>>("Times")
                        .HasColumnType("integer[]");

                    b.Property<DateTime>("addedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("adjustment")
                        .HasColumnType("boolean");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("firstReason")
                        .HasColumnType("text");

                    b.Property<int>("firstWish")
                        .HasColumnType("integer");

                    b.Property<int>("grade")
                        .HasColumnType("integer");

                    b.Property<string>("id_student")
                        .HasColumnType("text");

                    b.Property<string>("ip")
                        .HasColumnType("text");

                    b.Property<string>("major")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.Property<string>("question1")
                        .HasColumnType("text");

                    b.Property<string>("question2")
                        .HasColumnType("text");

                    b.Property<string>("secondReason")
                        .HasColumnType("text");

                    b.Property<int>("secondWish")
                        .HasColumnType("integer");

                    b.Property<bool>("sex")
                        .HasColumnType("boolean");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("strguid")
                        .HasColumnType("text");

                    b.HasKey("rid");

                    b.ToTable("Record");
                });

            modelBuilder.Entity("_2020_backend.Models.SMS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("OperatorName")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("id_student")
                        .HasColumnType("text");

                    b.Property<DateTime>("sendTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Sms");
                });

            modelBuilder.Entity("_2020_backend.Models.User", b =>
                {
                    b.Property<string>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Secret")
                        .HasColumnType("text");

                    b.Property<bool>("isManager")
                        .HasColumnType("boolean");

                    b.Property<long>("stuID")
                        .HasColumnType("bigint");

                    b.HasKey("Uid");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
